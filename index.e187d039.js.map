{"mappings":"CCmBA,AAfA,SAAS,EAAW,CAAM,EACnB,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAc,EAAO,gBAAgB,CAAC,KAAA,CAAA,OAAA,QAAA,CAAA,GAAtC,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EAAA,CAAK,IAAM,EAAN,EAAA,KAAA,CACH,GAAI,EAAK,aAAa,CAAC,MAAO,CAC5B,EAAW,EAAK,aAAa,CAAC,OAE9B,IAAM,EAAU,SAAS,aAAa,CAAC,OAEvC,CAAA,EAAQ,WAAW,CAAG,EAAK,UAAU,CAAC,WAAW,CAAC,IAAI,GAEtD,EAAK,UAAU,CAAC,MAAM,GACtB,EAAK,YAAY,CAAC,EAAS,EAAK,aAAa,CAAC,MAChD,C,C,C,M,E,CAVG,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAYP,EAfa,SAAS,aAAa,CAAC,UAmBpC,SAAS,gBAAgB,CAAC,QAAS,SAAC,CAApC,EACE,GAAI,AAAqB,SAArB,EAAE,MAAM,CAAC,OAAO,CAAa,CAC/B,IAAM,EAAY,EAAE,MAAM,CAAC,kBAAkB,CAEzC,GAAa,AAAsB,OAAtB,EAAU,OAAO,GAE9B,AAA4B,KAA5B,EAAU,KAAK,CAAC,OAAO,EACvB,AAA4B,UAA5B,EAAU,KAAK,CAAC,OAAO,CAEvB,EAAU,KAAK,CAAC,OAAO,CAAG,OAE1B,EAAU,KAAK,CAAC,OAAO,CAAG,QAGhC,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["'use strict';\nvar tree = document.querySelector('.tree');\nfunction expandTree(treeIn) {\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = treeIn.querySelectorAll('li')[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var item = _step.value;\n            if (item.querySelector('ul')) {\n                expandTree(item.querySelector('ul'));\n                var newSpan = document.createElement('span');\n                newSpan.textContent = item.firstChild.textContent.trim();\n                item.firstChild.remove();\n                item.insertBefore(newSpan, item.querySelector('ul'));\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n}\nexpandTree(tree);\ndocument.addEventListener('click', function(e) {\n    if (e.target.tagName === 'SPAN') {\n        var childList = e.target.nextElementSibling;\n        if (childList && childList.tagName === 'UL') {\n            if (childList.style.display === '' || childList.style.display === 'block') childList.style.display = 'none';\n            else childList.style.display = 'block';\n        }\n    }\n});\n\n//# sourceMappingURL=index.e187d039.js.map\n","'use strict';\n\nconst tree = document.querySelector('.tree');\n\nfunction expandTree(treeIn) {\n  for (const item of treeIn.querySelectorAll('li')) {\n    if (item.querySelector('ul')) {\n      expandTree(item.querySelector('ul'));\n\n      const newSpan = document.createElement('span');\n\n      newSpan.textContent = item.firstChild.textContent.trim();\n\n      item.firstChild.remove();\n      item.insertBefore(newSpan, item.querySelector('ul'));\n    }\n  }\n}\n\nexpandTree(tree);\n\ndocument.addEventListener('click', (e) => {\n  if (e.target.tagName === 'SPAN') {\n    const childList = e.target.nextElementSibling;\n\n    if (childList && childList.tagName === 'UL') {\n      if (\n        childList.style.display === '' ||\n        childList.style.display === 'block'\n      ) {\n        childList.style.display = 'none';\n      } else {\n        childList.style.display = 'block';\n      }\n    }\n  }\n});\n"],"names":["expandTree","treeIn","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","querySelectorAll","Symbol","iterator","next","done","item","value","querySelector","newSpan","document","createElement","textContent","firstChild","trim","remove","insertBefore","err","return","addEventListener","e","target","tagName","childList","nextElementSibling","style","display"],"version":3,"file":"index.e187d039.js.map"}